plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-android-extensions'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
    id 'androidx.navigation.safeargs'
}

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.3"

    defaultConfig {
        applicationId "com.cliff.myscore"
        minSdkVersion 21
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"
        /* Room has the following annotation processor options:

         room.schemaLocation: Configures and enables exporting database schemas into JSON files in the given directory. See Room Migrations for more information.
         room.incremental: Enables Gradle incremental annotation processor.
         room.expandProjection: Configures Room to rewrite queries such that their top star projection is expanded to only contain the columns defined in the DAO method return type.*/

        javaCompileOptions {
            annotationProcessorOptions {
                arguments += ["room.schemaLocation"  : "$projectDir/schemas".toString(),
                              "room.incremental"     : "true",
                              "room.expandProjection": "true"]
            }
        }
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        viewBinding true
    }

    sourceSets {
        // Adds exported schema location as test app assets.

        androidTest {
            java.srcDirs += "src/shareTestUtils/java"
            assets.srcDirs += files("$projectDir/schemas".toString())
        }
        test {
            java.srcDirs += "src/shareTestUtils/java"
        }
    }

    packagingOptions {
        exclude 'META-INF/AL2.0'
        exclude 'META-INF/LGPL2.1'
    }
}

dependencies {
    implementation Libs.kotlinStandardLibrary
    implementation Libs.core_ktx
    implementation Libs.appcompat
    implementation Libs.material
    implementation Libs.constraintlayout

    //implementation 'androidx.legacy:legacy-support-v4:1.0.0'

    implementation Libs.recyclerview

    //Retrofit2
    implementation Libs.retrofit2
    implementation Libs.retrofit2_converter_gson
    implementation Libs.logging_interceptor

    //LifeCycle
    implementation Libs.lifecycle_livedata
    implementation Libs.lifecycle_viewmodel

    //Navigation
    implementation Libs.navigation_fragment_ktx
    implementation Libs.navigation_ui_ktx

    //Hilt
    implementation Libs.hilt_android
    kapt Libs.hilt_compiler

    //Glide
    implementation Libs.glide
    annotationProcessor Libs.glide_compiler

    //Room
    implementation Libs.room_runtime
    kapt Libs.room_compiler
    implementation Libs.room_ktx

    implementation 'io.github.cliffgr:cpbar:1.1.1'

    implementation("com.github.corouteam:GlideToVectorYou:v2.0.0") {
        exclude group: 'com.github.bumptech.glide', module: 'glide'
        exclude group: 'com.github.bumptech.glide', module: 'compiler'
    }


    testImplementation 'junit:junit:4.+'
    testImplementation 'org.jetbrains.kotlinx:kotlinx-coroutines-test:1.4.2'
    testImplementation 'androidx.arch.core:core-testing:2.1.0'
    testImplementation 'com.nhaarman.mockitokotlin2:mockito-kotlin:2.1.0'
    testImplementation 'org.mockito:mockito-inline:2.21.0'


    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'
    androidTestImplementation "androidx.room:room-testing:$room_version"
    androidTestImplementation 'org.jetbrains.kotlinx:kotlinx-coroutines-test:1.4.2'
    androidTestImplementation 'androidx.arch.core:core-testing:2.1.0'
}